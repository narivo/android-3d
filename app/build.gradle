plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
}

def defaultPathBase = System.getProperty("user.dir")
def debug_keystore_path
def release_keystore_path

if (System.properties['os.name'].toLowerCase().contains('windows')) {
    println "Compiling on Windows ..."
    debug_keystore_path = defaultPathBase + '\\app\\keystores\\debug.keystore'
    release_keystore_path = defaultPathBase + '\\app\\keystores\\release.keystore'

} else {
    println "Compiling on UNIX ..."
    debug_keystore_path = defaultPathBase + '/app/keystores/debug.keystore'
    release_keystore_path = defaultPathBase + '/app/keystores/release.keystore'
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()

keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 31
    buildToolsVersion "31.0.0"

    signingConfigs {
        release {
            keyAlias keystoreProperties['releaseKeyAlias']
            keyPassword keystoreProperties['releaseKeyPassword']
            storePassword keystoreProperties['releaseStorePassword']
            storeFile file(release_keystore_path)

        }
        debug {
            keyAlias keystoreProperties['debugKeyAlias']
            keyPassword keystoreProperties['debugKeyPassword']
            storePassword keystoreProperties['debugStorePassword']
            storeFile file(debug_keystore_path)
        }
    }

    defaultConfig {
        applicationId "com.example.webviewar"
        minSdkVersion 19
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            ndk {
                abiFilters "armeabi-v7a", "arm64-v8a"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    externalNativeBuild {
        cmake {
            path file('CMakeLists.txt')
        }
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'androidx.webkit:webkit:1.2.0'
    implementation 'com.github.smart-fun:smartGL:1.2.1'    // add this line
}